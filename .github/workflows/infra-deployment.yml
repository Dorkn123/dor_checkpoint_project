name: Infrastructure Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'  # All files in the terraform directory
      - 'infra_deployment.yml'  # The infrastructure deployment file itself
      
env:
  tf_version: '1.9.5'
  tg_version: '0.66.9'
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
  AWS_REGION: "eu-north-1"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Terraform Plugin Cache Dir
      shell: bash
      run: |
          mkdir --parents $TF_PLUGIN_CACHE_DIR

    # Step 1: Deploy S3
    - name: Setup and Deploy S3 in dev with Terragrunt
      uses: gruntwork-io/terragrunt-action@v1
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'apply'
        tg_dir: 'terraform/environments/dev/s3'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    # Step 2: Capture S3 bucket_name output
    - name: Get Terraform Output for bucket_name
      id: get_bucket_name
      uses: gruntwork-io/terragrunt-action@v1
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'output -raw bucket_name'
        tg_dir: 'terraform/environments/dev/s3'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    # Step 3: Update config.json with S3 bucket_name
    - name: Update config.json with S3 bucket_name
      run: |
          sed -i "s|\"bucket_name\": \"\"|\"bucket_name\": \"${{ steps.get_bucket_name.outputs.value }}\"|g" python/src/config.json

    # Step 4: Deploy CloudFront
    - name: Setup and Deploy CloudFront in dev with Terragrunt
      uses: gruntwork-io/terragrunt-action@v1
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'apply'
        tg_dir: 'terraform/environments/dev/cloudfront'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    # Step 5: Capture CloudFront domain_name output
    - name: Get Terraform Output for cloudfront_domain_name
      id: get_cloudfront_domain_name
      uses: gruntwork-io/terragrunt-action@v1
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'output -raw cloudfront_domain_name'
        tg_dir: 'terraform/environments/dev/cloudfront'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    # Step 6: Update config.json with CloudFront domain_name
    - name: Update config.json with CloudFront domain_name
      run: |
          sed -i "s|\"cloudfront_domain\": \"\"|\"cloudfront_domain\": \"${{ steps.get_cloudfront_domain_name.outputs.value }}\"|g" python/src/config.json
          sed -i "s|\"cloudfront_url\": \"\"|\"cloudfront_url\": \"https://${{ steps.get_cloudfront_domain_name.outputs.value }}/filtered_products.json\"|g" python/src/config.json
